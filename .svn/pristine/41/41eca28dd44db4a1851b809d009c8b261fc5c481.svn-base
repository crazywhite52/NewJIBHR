{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work_Project\\\\grommet\\\\jib-register-2019\\\\src\\\\pages\\\\job.js\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NumberFormat from 'react-number-format';\nimport { Box, // Select,\nGrommet, TextInput, CheckBox, RadioButtonGroup, Calendar } from \"grommet\";\nimport Select from 'react-select';\nvar options = [{\n  value: '75',\n  label: 'ออนไลน์'\n}, {\n  value: '1000',\n  label: 'สำนักงานใหญ่'\n}, {\n  value: '100',\n  label: 'สาขา อยุธยา'\n}];\n\nconst orderOptions = values => {\n  return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed));\n};\n\nlet newArr = [];\nexport default class Job extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      DDbranchname: {},\n      DDjobname: [],\n      PTchecked: false,\n      re_money: '',\n      OWchecked: '',\n      dateSelect: '' // dateSelect:(new Date()).toISOString(),\n\n    };\n    this.onChangeDDl = this.onChangeDDl.bind(this);\n  }\n\n  getDataContent(varname, value) {\n    this.setState({\n      [varname]: value\n    }, () => {\n      this.getDataContentFull();\n    });\n  }\n\n  getDataContentFull() {\n    // newArr={\n    //   ddBranch:this.state.DDbranchname,\n    //   DDjobname:this.state.DDjobname,\n    //   PTchecked:this.state.PTchecked,\n    //   OWchecked:this.state.OWchecked,\n    //   dateSelect:this.state.dateSelect,\n    // };\n    var ques_list = JSON.parse(this.state.DDbranchname);\n    console.log(ques_list); // if(this.state.DDbranchname.length){\n    // }\n    // this.props.getUpdateContent(1,newArr)\n  }\n\n  onChangeDDl(value, {\n    action,\n    removedValue\n  }) {\n    switch (action) {\n      case 'remove-value':\n      case 'pop-value':\n        if (removedValue.isFixed) {\n          return;\n        }\n\n        break;\n\n      case 'clear':\n        value = options.filter(v => v.isFixed);\n        break;\n    }\n\n    value = orderOptions(value);\n\n    if (value.length < 3) {\n      this.setState({\n        DDjobname: value\n      }, () => {\n        this.getDataContentFull();\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" \", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u0E25\\u0E31\\u0E01\\u0E29\\u0E13\\u0E30\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23 \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      style: {\n        marginTop: 10,\n        marginLeft: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u0E41\\u0E1C\\u0E19\\u0E01/\\u0E2A\\u0E32\\u0E02\\u0E32\", React.createElement(\"k\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"*\"))), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: this.state.DDbranchname,\n      placeholder: \"--\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E41\\u0E1C\\u0E19\\u0E01/\\u0E2A\\u0E32\\u0E02\\u0E32\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23---\",\n      size: \"xsmall\",\n      style: {\n        width: 300\n      },\n      options: options,\n      onChange: event => this.getDataContent('DDbranchname', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23 2 \\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\", React.createElement(\"k\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"*\"))), React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      xl: 4,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: this.state.DDjobname,\n      isMulti: true,\n      isClearable: this.state.DDjobname.some(v => !v.isFixed),\n      name: \"colors\",\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      options: options,\n      onChange: this.onChangeDDl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      checked: this.state.PTchecked,\n      label: \"PartTime?\",\n      onChange: event => this.setState({\n        PTchecked: event.target.checked\n      }, () => {\n        this.getDataContentFull();\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u0E40\\u0E07\\u0E34\\u0E19\\u0E40\\u0E14\\u0E37\\u0E2D\\u0E19\\u0E17\\u0E35\\u0E48\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\", React.createElement(\"k\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"*\"))), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      style: {\n        width: '100%'\n      },\n      size: \"xsmall\",\n      value: this.state.re_money,\n      onChange: event => this.setState({\n        re_money: event.target.value\n      }, () => {\n        this.getDataContentFull();\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E30\\u0E20\\u0E32\\u0E1E\\u0E01\\u0E32\\u0E23\\u0E17\\u0E33\\u0E07\\u0E32\\u0E19(\\u0E1B\\u0E31\\u0E08\\u0E08\\u0E38\\u0E1A\\u0E31\\u0E19)\", React.createElement(\"k\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"*\"))), React.createElement(Grid, {\n      item: true,\n      lg: 6,\n      xl: 6,\n      xs: 6,\n      sm: 6,\n      md: 6,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(RadioButtonGroup, {\n      name: \"doc\",\n      options: [\"ว่างงาน\", \"ทำงานประจำ\", \"Part Time\", \"กำลังจบการศึกษา\"],\n      value: this.state.OWchecked,\n      onChange: event => this.setState({\n        OWchecked: event.target.value\n      }, () => {\n        this.getDataContentFull();\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E04\\u0E34\\u0E14\\u0E27\\u0E48\\u0E32\\u0E1E\\u0E23\\u0E49\\u0E2D\\u0E21\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21\\u0E07\\u0E32\\u0E19\", React.createElement(\"k\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"*\"))), React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      xl: 2,\n      xs: 2,\n      sm: 2,\n      md: 2,\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      size: \"small\",\n      locale: \"en-US\",\n      margin: \"xsmall\",\n      date: this.state.dateSelect,\n      onSelect: date => {\n        this.setState({\n          dateSelect: date\n        }, () => {\n          this.getDataContentFull();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:\\Work_Project\\grommet\\jib-register-2019\\src\\pages\\job.js"],"names":["React","Component","Grid","NumberFormat","Box","Grommet","TextInput","CheckBox","RadioButtonGroup","Calendar","Select","options","value","label","orderOptions","values","filter","v","isFixed","concat","newArr","Job","constructor","props","state","DDbranchname","DDjobname","PTchecked","re_money","OWchecked","dateSelect","onChangeDDl","bind","getDataContent","varname","setState","getDataContentFull","ques_list","JSON","parse","console","log","action","removedValue","length","render","marginTop","marginLeft","marginRight","padding","textAlign","color","width","event","some","target","checked","date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {\r\n  Box,\r\n  // Select,\r\n  Grommet,\r\n  TextInput,\r\n  CheckBox,\r\n  RadioButtonGroup,\r\n  Calendar\r\n} from \"grommet\";\r\nimport Select from 'react-select';\r\nvar options = [\r\n  { value: '75', label: 'ออนไลน์' },\r\n  { value: '1000', label: 'สำนักงานใหญ่' },\r\n  { value: '100', label: 'สาขา อยุธยา' }\r\n];\r\nconst orderOptions = (values) => {\r\n  return values.filter((v) => v.isFixed).concat(values.filter((v) => !v.isFixed));\r\n};\r\n\r\nlet newArr = [];\r\nexport default class Job extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DDbranchname:{},\r\n      DDjobname:[],\r\n      PTchecked: false,\r\n      re_money:'',\r\n      OWchecked: '',\r\n      dateSelect:''\r\n      // dateSelect:(new Date()).toISOString(),\r\n     \r\n    };\r\n    \r\n    this.onChangeDDl = this.onChangeDDl.bind(this);\r\n  }\r\n\r\n  getDataContent(varname,value) {\r\n      this.setState({[varname]:value},()=>{\r\n        this.getDataContentFull()\r\n      });\r\n  }\r\n  getDataContentFull(){\r\n    // newArr={\r\n    //   ddBranch:this.state.DDbranchname,\r\n    //   DDjobname:this.state.DDjobname,\r\n    //   PTchecked:this.state.PTchecked,\r\n    //   OWchecked:this.state.OWchecked,\r\n    //   dateSelect:this.state.dateSelect,\r\n    // };\r\n    var ques_list = JSON.parse(this.state.DDbranchname);\r\n    console.log(ques_list)\r\n    // if(this.state.DDbranchname.length){\r\n\r\n    // }\r\n    // this.props.getUpdateContent(1,newArr)\r\n  }\r\n\r\n  onChangeDDl (value, { action, removedValue }) {\r\n    \r\n    switch (action) {\r\n      case 'remove-value':\r\n      case 'pop-value':\r\n        if (removedValue.isFixed) {\r\n          return;\r\n        }\r\n        break;\r\n      case 'clear':\r\n        value = options.filter((v) => v.isFixed);\r\n        break;\r\n    }\r\n    value = orderOptions(value);\r\n    if(value.length<3){\r\n      this.setState({DDjobname:value},()=>{\r\n        this.getDataContentFull()\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {\" \"}\r\n          <h4>ลักษณะงานที่ต้องการ </h4>\r\n          <hr />\r\n        </div>\r\n        <Grid\r\n          container\r\n          spacing={24}\r\n          style={{ marginTop: 10, marginLeft: 10, marginRight: 10 }}\r\n        >\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <h6 style={{ textAlign: \"right\" }}>\r\n              แผนก/สาขา<k style={{ color: \"red\" }}>*</k>\r\n            </h6>\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <Select\r\n              value={this.state.DDbranchname}\r\n              placeholder=\"--เลือกแผนก/สาขาที่สมัคร---\"\r\n              size=\"xsmall\"\r\n              style={{width:300}}\r\n               options={options}\r\n               onChange={event => this.getDataContent('DDbranchname',event)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <h6 style={{ textAlign: \"right\" }}>\r\n              ตำแหน่งงานที่ต้องการ 2 ตำแหน่ง<k style={{ color: \"red\" }}>*</k>\r\n            </h6>\r\n          </Grid>\r\n          <Grid item lg={4} xl={4} xs={4} sm={4} md={4} style={{ padding: 5 }}>\r\n          <Select \r\n              value={this.state.DDjobname}\r\n              isMulti\r\n              isClearable={this.state.DDjobname.some(v => !v.isFixed)}\r\n              name=\"colors\"\r\n              className=\"basic-multi-select\"\r\n              classNamePrefix=\"select\" \r\n              options={options}\r\n              onChange={this.onChangeDDl}\r\n            /> \r\n          </Grid>\r\n\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <CheckBox\r\n              checked={this.state.PTchecked}\r\n              label=\"PartTime?\"\r\n              onChange={event =>\r\n                this.setState({ PTchecked: event.target.checked },()=>{\r\n                    this.getDataContentFull()\r\n                })\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <h6 style={{ textAlign: \"right\" }}>\r\n              เงินเดือนที่ต้องการ<k style={{ color: \"red\" }}>*</k>\r\n            </h6>\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <TextInput\r\n              style={{width:'100%'}}\r\n              size=\"xsmall\"\r\n              value={this.state.re_money}\r\n              onChange={event => this.setState({re_money:event.target.value},()=>{\r\n                this.getDataContentFull()\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <h6 style={{ textAlign: \"right\" }}>\r\n              สถานะภาพการทำงาน(ปัจจุบัน)<k style={{ color: \"red\" }}>*</k>\r\n            </h6>\r\n          </Grid>\r\n          <Grid item lg={6} xl={6} xs={6} sm={6} md={6} style={{ padding: 5 }}>\r\n            <RadioButtonGroup\r\n              name=\"doc\"\r\n              options={[\"ว่างงาน\", \"ทำงานประจำ\", \"Part Time\", \"กำลังจบการศึกษา\"]}\r\n              value={this.state.OWchecked}\r\n              onChange={event =>\r\n                this.setState({ OWchecked: event.target.value },()=>{\r\n                  this.getDataContentFull()\r\n                })\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <h6 style={{ textAlign: \"right\" }}>\r\n              วันที่คิดว่าพร้อมเริ่มงาน<k style={{ color: \"red\" }}>*</k>\r\n            </h6>\r\n          </Grid>\r\n          <Grid item lg={2} xl={2} xs={2} sm={2} md={2} style={{ padding: 5 }}>\r\n            <Calendar\r\n              size=\"small\"\r\n              locale=\"en-US\"\r\n              margin=\"xsmall\"\r\n              date={this.state.dateSelect}\r\n              onSelect={(date) => {this.setState({dateSelect:date},()=>{\r\n                this.getDataContentFull()\r\n              })}}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}